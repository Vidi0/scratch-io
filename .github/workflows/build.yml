name: Build

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        target:
          [
            x86_64-unknown-linux-gnu,
            aarch64-unknown-linux-gnu,
            x86_64-apple-darwin,
            aarch64-apple-darwin,
            x86_64-pc-windows-msvc,
            aarch64-pc-windows-msvc,
          ]
    runs-on: ${{ (contains(matrix.target, 'apple-darwin') && 'macos-latest') ||
      (contains(matrix.target, 'linux-gnu') && 'ubuntu-latest') ||
      (contains(matrix.target, 'pc-windows') && 'windows-latest') }}
    steps:
      - uses: actions/checkout@v4

      - name: Install deps (aarch64 linux only)
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: |
          if [[ $ImageOS == "ubuntu24" ]]; then
            cat <<EOF > deb822sources
          Types: deb
          URIs: http://archive.ubuntu.com/ubuntu
          Suites: noble noble-updates noble-backports
          Components: main restricted universe multiverse
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

          Types: deb
          URIs: http://security.ubuntu.com/ubuntu/
          Suites: noble-security
          Components: main restricted universe multiverse
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

          Types: deb
          URIs: http://ports.ubuntu.com/ubuntu-ports/
          Suites: noble noble-updates noble-backports
          Components: main restricted universe multiverse
          Architectures: arm64
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

          Types: deb
          URIs: http://security.ports.ubuntu.com/ubuntu-ports/
          Suites: noble-security
          Components: main restricted universe multiverse
          Architectures: arm64
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
          EOF
          
          fi
  
          sudo mv deb822sources /etc/apt/sources.list.d/ubuntu.sources
          sudo dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu libssl-dev:arm64
          export OPENSSL_DIR=/usr/lib/aarch64-linux-gnu/

      - name: Setup target
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo build --verbose --release --target ${{ matrix.target }}

      - name: Package binary
        shell: bash
        run: |
          BIN_NAME="scratch-io"
          TARGET="${{ matrix.target }}"
          
          if [[ -f "target/$TARGET/release/$BIN_NAME" ]]; then
              cp "target/$TARGET/release/$BIN_NAME" "$BIN_NAME-$TARGET"
          else
              cp "target/$TARGET/release/$BIN_NAME.exe" "$BIN_NAME-$TARGET.exe"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/*

  draft-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    steps:
      - name: Download builds
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Create draft release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          generate_release_notes: true
          files: |
            target/**/release/*
